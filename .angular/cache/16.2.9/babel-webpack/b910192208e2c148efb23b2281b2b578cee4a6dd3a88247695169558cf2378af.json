{"ast":null,"code":"import { decrement, increment, reset } from 'src/app/counter.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nexport let MycountcomponentComponent = /*#__PURE__*/(() => {\n  class MycountcomponentComponent {\n    constructor(store) {\n      this.store = store;\n      this.count = 0;\n      this.count$ = this.store.select(\"count\");\n      this.store.select(\"count\").subscribe(d => {\n        this.count = d; //async olmadan elde edebileceğimiz yöntem\n      });\n    }\n\n    increment() {\n      this.store.dispatch(increment());\n    }\n    decrement() {\n      this.store.dispatch(decrement());\n    }\n    reset() {\n      this.store.dispatch(reset());\n    }\n    static #_ = this.ɵfac = function MycountcomponentComponent_Factory(t) {\n      return new (t || MycountcomponentComponent)(i0.ɵɵdirectiveInject(i1.Store));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MycountcomponentComponent,\n      selectors: [[\"app-mycountcomponent\"]],\n      decls: 11,\n      vars: 3,\n      consts: [[3, \"click\"]],\n      template: function MycountcomponentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"mycountcomponent works!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function MycountcomponentComponent_Template_button_click_2_listener() {\n            return ctx.increment();\n          });\n          i0.ɵɵtext(3, \"Increment\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\");\n          i0.ɵɵtext(5);\n          i0.ɵɵpipe(6, \"async\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function MycountcomponentComponent_Template_button_click_7_listener() {\n            return ctx.decrement();\n          });\n          i0.ɵɵtext(8, \"decrement\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function MycountcomponentComponent_Template_button_click_9_listener() {\n            return ctx.reset();\n          });\n          i0.ɵɵtext(10, \"reset\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\"Current Count: \", i0.ɵɵpipeBind1(6, 1, ctx.count$), \"\");\n        }\n      },\n      dependencies: [i2.AsyncPipe]\n    });\n  }\n  return MycountcomponentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}