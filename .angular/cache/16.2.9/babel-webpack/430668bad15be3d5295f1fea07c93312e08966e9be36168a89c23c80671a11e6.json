{"ast":null,"code":"import { decrement, increment, reset } from 'src/app/counter.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nexport class MycountcomponentComponent {\n  constructor(store) {\n    this.store = store;\n    this.count = 0;\n    this.count$ = this.store.select(\"count\");\n    this.store.select(\"count\").subscribe(d => {\n      this.count = d; //\n    });\n  }\n\n  increment() {\n    this.store.dispatch(increment());\n  }\n  decrement() {\n    this.store.dispatch(decrement());\n  }\n  reset() {\n    this.store.dispatch(reset());\n  }\n  static #_ = this.ɵfac = function MycountcomponentComponent_Factory(t) {\n    return new (t || MycountcomponentComponent)(i0.ɵɵdirectiveInject(i1.Store));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MycountcomponentComponent,\n    selectors: [[\"app-mycountcomponent\"]],\n    decls: 11,\n    vars: 3,\n    consts: [[3, \"click\"]],\n    template: function MycountcomponentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"mycountcomponent works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function MycountcomponentComponent_Template_button_click_2_listener() {\n          return ctx.increment();\n        });\n        i0.ɵɵtext(3, \"Increment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\");\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function MycountcomponentComponent_Template_button_click_7_listener() {\n          return ctx.decrement();\n        });\n        i0.ɵɵtext(8, \"decrement\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function MycountcomponentComponent_Template_button_click_9_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(10, \"reset\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"Current Count: \", i0.ɵɵpipeBind1(6, 1, ctx.count$), \"\");\n      }\n    },\n    dependencies: [i2.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["decrement","increment","reset","MycountcomponentComponent","constructor","store","count","count$","select","subscribe","d","dispatch","_","i0","ɵɵdirectiveInject","i1","Store","_2","selectors","decls","vars","consts","template","MycountcomponentComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","MycountcomponentComponent_Template_button_click_2_listener","MycountcomponentComponent_Template_button_click_7_listener","MycountcomponentComponent_Template_button_click_9_listener","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1"],"sources":["C:\\Users\\eftel\\Documents\\AngularLearn\\learn-angular\\src\\app\\components\\mycountcomponent\\mycountcomponent.component.ts","C:\\Users\\eftel\\Documents\\AngularLearn\\learn-angular\\src\\app\\components\\mycountcomponent\\mycountcomponent.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { decrement, increment, reset } from 'src/app/counter.action';\n\n@Component({\n  selector: 'app-mycountcomponent',\n  templateUrl: './mycountcomponent.component.html',\n  styleUrls: ['./mycountcomponent.component.css']\n})\nexport class MycountcomponentComponent {\n  count$:Observable<number>\n  count:number=0;\n  constructor(private store:Store<{count: number}>){\n      this.count$=this.store.select(\"count\");\n      this.store.select(\"count\").subscribe(d=>{\n        this.count=d;//\n      })\n    }\n  increment(){\n    this.store.dispatch(increment());\n\n  }\n  decrement(){\n    this.store.dispatch(decrement());\n\n  }\n  reset(){\n    this.store.dispatch(reset());\n  }\n\n}\n","<p>mycountcomponent works!</p>\n\n<button (click)=\"increment()\">Increment</button>\n<div>Current Count: {{ count$ | async }}</div>\n<button (click)=\"decrement()\">decrement</button>\n<button (click)=\"reset()\">reset</button>\n"],"mappings":"AAGA,SAASA,SAAS,EAAEC,SAAS,EAAEC,KAAK,QAAQ,wBAAwB;;;;AAOpE,OAAM,MAAOC,yBAAyB;EAGpCC,YAAoBC,KAA4B;IAA5B,KAAAA,KAAK,GAALA,KAAK;IADzB,KAAAC,KAAK,GAAQ,CAAC;IAEV,IAAI,CAACC,MAAM,GAAC,IAAI,CAACF,KAAK,CAACG,MAAM,CAAC,OAAO,CAAC;IACtC,IAAI,CAACH,KAAK,CAACG,MAAM,CAAC,OAAO,CAAC,CAACC,SAAS,CAACC,CAAC,IAAE;MACtC,IAAI,CAACJ,KAAK,GAACI,CAAC,CAAC;IACf,CAAC,CAAC;EACJ;;EACFT,SAASA,CAAA;IACP,IAAI,CAACI,KAAK,CAACM,QAAQ,CAACV,SAAS,EAAE,CAAC;EAElC;EACAD,SAASA,CAAA;IACP,IAAI,CAACK,KAAK,CAACM,QAAQ,CAACX,SAAS,EAAE,CAAC;EAElC;EACAE,KAAKA,CAAA;IACH,IAAI,CAACG,KAAK,CAACM,QAAQ,CAACT,KAAK,EAAE,CAAC;EAC9B;EAAC,QAAAU,CAAA,G;qBAnBUT,yBAAyB,EAAAU,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,KAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAzBd,yBAAyB;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVtCX,EAAA,CAAAa,cAAA,QAAG;QAAAb,EAAA,CAAAc,MAAA,8BAAuB;QAAAd,EAAA,CAAAe,YAAA,EAAI;QAE9Bf,EAAA,CAAAa,cAAA,gBAA8B;QAAtBb,EAAA,CAAAgB,UAAA,mBAAAC,2DAAA;UAAA,OAASL,GAAA,CAAAxB,SAAA,EAAW;QAAA,EAAC;QAACY,EAAA,CAAAc,MAAA,gBAAS;QAAAd,EAAA,CAAAe,YAAA,EAAS;QAChDf,EAAA,CAAAa,cAAA,UAAK;QAAAb,EAAA,CAAAc,MAAA,GAAmC;;QAAAd,EAAA,CAAAe,YAAA,EAAM;QAC9Cf,EAAA,CAAAa,cAAA,gBAA8B;QAAtBb,EAAA,CAAAgB,UAAA,mBAAAE,2DAAA;UAAA,OAASN,GAAA,CAAAzB,SAAA,EAAW;QAAA,EAAC;QAACa,EAAA,CAAAc,MAAA,gBAAS;QAAAd,EAAA,CAAAe,YAAA,EAAS;QAChDf,EAAA,CAAAa,cAAA,gBAA0B;QAAlBb,EAAA,CAAAgB,UAAA,mBAAAG,2DAAA;UAAA,OAASP,GAAA,CAAAvB,KAAA,EAAO;QAAA,EAAC;QAACW,EAAA,CAAAc,MAAA,aAAK;QAAAd,EAAA,CAAAe,YAAA,EAAS;;;QAFnCf,EAAA,CAAAoB,SAAA,GAAmC;QAAnCpB,EAAA,CAAAqB,kBAAA,oBAAArB,EAAA,CAAAsB,WAAA,OAAAV,GAAA,CAAAlB,MAAA,MAAmC"},"metadata":{},"sourceType":"module","externalDependencies":[]}