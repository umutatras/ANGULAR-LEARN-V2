{"ast":null,"code":"/**\n * @license Angular v16.2.11\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ViewEncapsulation, Injectable, Inject, RendererFactory2, NgZone, ANIMATION_MODULE_TYPE, NgModule } from '@angular/core';\nexport { ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { ɵDomRendererFactory2, BrowserModule } from '@angular/platform-browser';\nimport { AnimationBuilder, sequence, AnimationFactory } from '@angular/animations';\nimport * as i1 from '@angular/animations/browser';\nimport { ɵAnimationEngine, ɵWebAnimationsStyleNormalizer, ɵAnimationStyleNormalizer, AnimationDriver, ɵWebAnimationsDriver, ɵNoopAnimationDriver } from '@angular/animations/browser';\nimport { DOCUMENT } from '@angular/common';\nclass BrowserAnimationBuilder extends AnimationBuilder {\n  constructor(rootRenderer, doc) {\n    super();\n    this._nextAnimationId = 0;\n    const typeData = {\n      id: '0',\n      encapsulation: ViewEncapsulation.None,\n      styles: [],\n      data: {\n        animation: []\n      }\n    };\n    this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n  }\n  build(animation) {\n    const id = this._nextAnimationId.toString();\n    this._nextAnimationId++;\n    const entry = Array.isArray(animation) ? sequence(animation) : animation;\n    issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n    return new BrowserAnimationFactory(id, this._renderer);\n  }\n  static {\n    this.ɵfac = function BrowserAnimationBuilder_Factory(t) {\n      return new (t || BrowserAnimationBuilder)(i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(DOCUMENT));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BrowserAnimationBuilder,\n      factory: BrowserAnimationBuilder.ɵfac\n    });\n  }\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserAnimationBuilder, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.RendererFactory2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\nclass BrowserAnimationFactory extends AnimationFactory {\n  constructor(_id, _renderer) {\n    super();\n    this._id = _id;\n    this._renderer = _renderer;\n  }\n  create(element, options) {\n    return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n  }\n}\nclass RendererAnimationPlayer {\n  constructor(id, element, options, _renderer) {\n    this.id = id;\n    this.element = element;\n    this._renderer = _renderer;\n    this.parentPlayer = null;\n    this._started = false;\n    this.totalTime = 0;\n    this._command('create', options);\n  }\n  _listen(eventName, callback) {\n    return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n  }\n  _command(command, ...args) {\n    return issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n  }\n  onDone(fn) {\n    this._listen('done', fn);\n  }\n  onStart(fn) {\n    this._listen('start', fn);\n  }\n  onDestroy(fn) {\n    this._listen('destroy', fn);\n  }\n  init() {\n    this._command('init');\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    this._command('play');\n    this._started = true;\n  }\n  pause() {\n    this._command('pause');\n  }\n  restart() {\n    this._command('restart');\n  }\n  finish() {\n    this._command('finish');\n  }\n  destroy() {\n    this._command('destroy');\n  }\n  reset() {\n    this._command('reset');\n    this._started = false;\n  }\n  setPosition(p) {\n    this._command('setPosition', p);\n  }\n  getPosition() {\n    return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;\n  }\n}\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n  return renderer.setProperty(element, `@@${id}:${command}`, args);\n}\nconst ANIMATION_PREFIX = '@';\nconst DISABLE_ANIMATIONS_FLAG = '@.disabled';\nclass AnimationRendererFactory {\n  constructor(delegate, engine, _zone) {\n    this.delegate = delegate;\n    this.engine = engine;\n    this._zone = _zone;\n    this._currentId = 0;\n    this._microtaskId = 1;\n    this._animationCallbacksBuffer = [];\n    this._rendererCache = new Map();\n    this._cdRecurDepth = 0;\n    engine.onRemovalComplete = (element, delegate) => {\n      // Note: if a component element has a leave animation, and a host leave animation,\n      // the view engine will call `removeChild` for the parent\n      // component renderer as well as for the child component renderer.\n      // Therefore, we need to check if we already removed the element.\n      const parentNode = delegate?.parentNode(element);\n      if (parentNode) {\n        delegate.removeChild(parentNode, element);\n      }\n    };\n  }\n  createRenderer(hostElement, type) {\n    const EMPTY_NAMESPACE_ID = '';\n    // cache the delegates to find out which cached delegate can\n    // be used by which cached renderer\n    const delegate = this.delegate.createRenderer(hostElement, type);\n    if (!hostElement || !type || !type.data || !type.data['animation']) {\n      let renderer = this._rendererCache.get(delegate);\n      if (!renderer) {\n        // Ensure that the renderer is removed from the cache on destroy\n        // since it may contain references to detached DOM nodes.\n        const onRendererDestroy = () => this._rendererCache.delete(delegate);\n        renderer = new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine, onRendererDestroy);\n        // only cache this result when the base renderer is used\n        this._rendererCache.set(delegate, renderer);\n      }\n      return renderer;\n    }\n    const componentId = type.id;\n    const namespaceId = type.id + '-' + this._currentId;\n    this._currentId++;\n    this.engine.register(namespaceId, hostElement);\n    const registerTrigger = trigger => {\n      if (Array.isArray(trigger)) {\n        trigger.forEach(registerTrigger);\n      } else {\n        this.engine.registerTrigger(componentId, namespaceId, hostElement, trigger.name, trigger);\n      }\n    };\n    const animationTriggers = type.data['animation'];\n    animationTriggers.forEach(registerTrigger);\n    return new AnimationRenderer(this, namespaceId, delegate, this.engine);\n  }\n  begin() {\n    this._cdRecurDepth++;\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n  _scheduleCountTask() {\n    queueMicrotask(() => {\n      this._microtaskId++;\n    });\n  }\n  /** @internal */\n  scheduleListenerCallback(count, fn, data) {\n    if (count >= 0 && count < this._microtaskId) {\n      this._zone.run(() => fn(data));\n      return;\n    }\n    if (this._animationCallbacksBuffer.length == 0) {\n      queueMicrotask(() => {\n        this._zone.run(() => {\n          this._animationCallbacksBuffer.forEach(tuple => {\n            const [fn, data] = tuple;\n            fn(data);\n          });\n          this._animationCallbacksBuffer = [];\n        });\n      });\n    }\n    this._animationCallbacksBuffer.push([fn, data]);\n  }\n  end() {\n    this._cdRecurDepth--;\n    // this is to prevent animations from running twice when an inner\n    // component does CD when a parent component instead has inserted it\n    if (this._cdRecurDepth == 0) {\n      this._zone.runOutsideAngular(() => {\n        this._scheduleCountTask();\n        this.engine.flush(this._microtaskId);\n      });\n    }\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n  whenRenderingDone() {\n    return this.engine.whenRenderingDone();\n  }\n  static {\n    this.ɵfac = function AnimationRendererFactory_Factory(t) {\n      return new (t || AnimationRendererFactory)(i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(i1.ɵAnimationEngine), i0.ɵɵinject(i0.NgZone));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AnimationRendererFactory,\n      factory: AnimationRendererFactory.ɵfac\n    });\n  }\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AnimationRendererFactory, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.RendererFactory2\n    }, {\n      type: i1.ɵAnimationEngine\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\nclass BaseAnimationRenderer {\n  constructor(namespaceId, delegate, engine, _onDestroy) {\n    this.namespaceId = namespaceId;\n    this.delegate = delegate;\n    this.engine = engine;\n    this._onDestroy = _onDestroy;\n  }\n  get data() {\n    return this.delegate.data;\n  }\n  destroyNode(node) {\n    this.delegate.destroyNode?.(node);\n  }\n  destroy() {\n    this.engine.destroy(this.namespaceId, this.delegate);\n    this.engine.afterFlushAnimationsDone(() => {\n      // Call the renderer destroy method after the animations has finished as otherwise\n      // styles will be removed too early which will cause an unstyled animation.\n      queueMicrotask(() => {\n        this.delegate.destroy();\n      });\n    });\n    this._onDestroy?.();\n  }\n  createElement(name, namespace) {\n    return this.delegate.createElement(name, namespace);\n  }\n  createComment(value) {\n    return this.delegate.createComment(value);\n  }\n  createText(value) {\n    return this.delegate.createText(value);\n  }\n  appendChild(parent, newChild) {\n    this.delegate.appendChild(parent, newChild);\n    this.engine.onInsert(this.namespaceId, newChild, parent, false);\n  }\n  insertBefore(parent, newChild, refChild, isMove = true) {\n    this.delegate.insertBefore(parent, newChild, refChild);\n    // If `isMove` true than we should animate this insert.\n    this.engine.onInsert(this.namespaceId, newChild, parent, isMove);\n  }\n  removeChild(parent, oldChild, isHostElement) {\n    this.engine.onRemove(this.namespaceId, oldChild, this.delegate);\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n  }\n  parentNode(node) {\n    return this.delegate.parentNode(node);\n  }\n  nextSibling(node) {\n    return this.delegate.nextSibling(node);\n  }\n  setAttribute(el, name, value, namespace) {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n  removeAttribute(el, name, namespace) {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n  addClass(el, name) {\n    this.delegate.addClass(el, name);\n  }\n  removeClass(el, name) {\n    this.delegate.removeClass(el, name);\n  }\n  setStyle(el, style, value, flags) {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n  removeStyle(el, style, flags) {\n    this.delegate.removeStyle(el, style, flags);\n  }\n  setProperty(el, name, value) {\n    if (name.charAt(0) == ANIMATION_PREFIX && name == DISABLE_ANIMATIONS_FLAG) {\n      this.disableAnimations(el, !!value);\n    } else {\n      this.delegate.setProperty(el, name, value);\n    }\n  }\n  setValue(node, value) {\n    this.delegate.setValue(node, value);\n  }\n  listen(target, eventName, callback) {\n    return this.delegate.listen(target, eventName, callback);\n  }\n  disableAnimations(element, value) {\n    this.engine.disableAnimations(element, value);\n  }\n}\nclass AnimationRenderer extends BaseAnimationRenderer {\n  constructor(factory, namespaceId, delegate, engine, onDestroy) {\n    super(namespaceId, delegate, engine, onDestroy);\n    this.factory = factory;\n    this.namespaceId = namespaceId;\n  }\n  setProperty(el, name, value) {\n    if (name.charAt(0) == ANIMATION_PREFIX) {\n      if (name.charAt(1) == '.' && name == DISABLE_ANIMATIONS_FLAG) {\n        value = value === undefined ? true : !!value;\n        this.disableAnimations(el, value);\n      } else {\n        this.engine.process(this.namespaceId, el, name.slice(1), value);\n      }\n    } else {\n      this.delegate.setProperty(el, name, value);\n    }\n  }\n  listen(target, eventName, callback) {\n    if (eventName.charAt(0) == ANIMATION_PREFIX) {\n      const element = resolveElementFromTarget(target);\n      let name = eventName.slice(1);\n      let phase = '';\n      // @listener.phase is for trigger animation callbacks\n      // @@listener is for animation builder callbacks\n      if (name.charAt(0) != ANIMATION_PREFIX) {\n        [name, phase] = parseTriggerCallbackName(name);\n      }\n      return this.engine.listen(this.namespaceId, element, name, phase, event => {\n        const countId = event['_data'] || -1;\n        this.factory.scheduleListenerCallback(countId, callback, event);\n      });\n    }\n    return this.delegate.listen(target, eventName, callback);\n  }\n}\nfunction resolveElementFromTarget(target) {\n  switch (target) {\n    case 'body':\n      return document.body;\n    case 'document':\n      return document;\n    case 'window':\n      return window;\n    default:\n      return target;\n  }\n}\nfunction parseTriggerCallbackName(triggerName) {\n  const dotIndex = triggerName.indexOf('.');\n  const trigger = triggerName.substring(0, dotIndex);\n  const phase = triggerName.slice(dotIndex + 1);\n  return [trigger, phase];\n}\nclass InjectableAnimationEngine extends ɵAnimationEngine {\n  // The `ApplicationRef` is injected here explicitly to force the dependency ordering.\n  // Since the `ApplicationRef` should be created earlier before the `AnimationEngine`, they\n  // both have `ngOnDestroy` hooks and `flush()` must be called after all views are destroyed.\n  constructor(doc, driver, normalizer, appRef) {\n    super(doc.body, driver, normalizer);\n  }\n  ngOnDestroy() {\n    this.flush();\n  }\n  static {\n    this.ɵfac = function InjectableAnimationEngine_Factory(t) {\n      return new (t || InjectableAnimationEngine)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1.AnimationDriver), i0.ɵɵinject(i1.ɵAnimationStyleNormalizer), i0.ɵɵinject(i0.ApplicationRef));\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: InjectableAnimationEngine,\n      factory: InjectableAnimationEngine.ɵfac\n    });\n  }\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InjectableAnimationEngine, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i1.AnimationDriver\n    }, {\n      type: i1.ɵAnimationStyleNormalizer\n    }, {\n      type: i0.ApplicationRef\n    }];\n  }, null);\n})();\nfunction instantiateDefaultStyleNormalizer() {\n  return new ɵWebAnimationsStyleNormalizer();\n}\nfunction instantiateRendererFactory(renderer, engine, zone) {\n  return new AnimationRendererFactory(renderer, engine, zone);\n}\nconst SHARED_ANIMATION_PROVIDERS = [{\n  provide: AnimationBuilder,\n  useClass: BrowserAnimationBuilder\n}, {\n  provide: ɵAnimationStyleNormalizer,\n  useFactory: instantiateDefaultStyleNormalizer\n}, {\n  provide: ɵAnimationEngine,\n  useClass: InjectableAnimationEngine\n}, {\n  provide: RendererFactory2,\n  useFactory: instantiateRendererFactory,\n  deps: [ɵDomRendererFactory2, ɵAnimationEngine, NgZone]\n}];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nconst BROWSER_ANIMATIONS_PROVIDERS = [{\n  provide: AnimationDriver,\n  useFactory: () => new ɵWebAnimationsDriver()\n}, {\n  provide: ANIMATION_MODULE_TYPE,\n  useValue: 'BrowserAnimations'\n}, ...SHARED_ANIMATION_PROVIDERS];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nconst BROWSER_NOOP_ANIMATIONS_PROVIDERS = [{\n  provide: AnimationDriver,\n  useClass: ɵNoopAnimationDriver\n}, {\n  provide: ANIMATION_MODULE_TYPE,\n  useValue: 'NoopAnimations'\n}, ...SHARED_ANIMATION_PROVIDERS];\n\n/**\n * Exports `BrowserModule` with additional [dependency-injection providers](guide/glossary#provider)\n * for use with animations. See [Animations](guide/animations).\n * @publicApi\n */\nclass BrowserAnimationsModule {\n  /**\n   * Configures the module based on the specified object.\n   *\n   * @param config Object used to configure the behavior of the `BrowserAnimationsModule`.\n   * @see {@link BrowserAnimationsModuleConfig}\n   *\n   * @usageNotes\n   * When registering the `BrowserAnimationsModule`, you can use the `withConfig`\n   * function as follows:\n   * ```\n   * @NgModule({\n   *   imports: [BrowserAnimationsModule.withConfig(config)]\n   * })\n   * class MyNgModule {}\n   * ```\n   */\n  static withConfig(config) {\n    return {\n      ngModule: BrowserAnimationsModule,\n      providers: config.disableAnimations ? BROWSER_NOOP_ANIMATIONS_PROVIDERS : BROWSER_ANIMATIONS_PROVIDERS\n    };\n  }\n  static {\n    this.ɵfac = function BrowserAnimationsModule_Factory(t) {\n      return new (t || BrowserAnimationsModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: BrowserAnimationsModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: BROWSER_ANIMATIONS_PROVIDERS,\n      imports: [BrowserModule]\n    });\n  }\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserAnimationsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [BrowserModule],\n      providers: BROWSER_ANIMATIONS_PROVIDERS\n    }]\n  }], null, null);\n})();\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimations()\n *   ]\n * });\n * ```\n *\n * @publicApi\n */\nfunction provideAnimations() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideAnimations` call results in app code.\n  return [...BROWSER_ANIMATIONS_PROVIDERS];\n}\n/**\n * A null player that must be imported to allow disabling of animations.\n * @publicApi\n */\nclass NoopAnimationsModule {\n  static {\n    this.ɵfac = function NoopAnimationsModule_Factory(t) {\n      return new (t || NoopAnimationsModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NoopAnimationsModule\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n      imports: [BrowserModule]\n    });\n  }\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NoopAnimationsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [BrowserModule],\n      providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS\n    }]\n  }], null, null);\n})();\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to disable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * @usageNotes\n *\n * The function is useful when you want to bootstrap an application using\n * the `bootstrapApplication` function, but you need to disable animations\n * (for example, when running tests).\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideNoopAnimations()\n *   ]\n * });\n * ```\n *\n * @publicApi\n */\nfunction provideNoopAnimations() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideNoopAnimations` call results in app code.\n  return [...BROWSER_NOOP_ANIMATIONS_PROVIDERS];\n}\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserAnimationsModule, NoopAnimationsModule, provideAnimations, provideNoopAnimations, AnimationRenderer as ɵAnimationRenderer, AnimationRendererFactory as ɵAnimationRendererFactory, BrowserAnimationBuilder as ɵBrowserAnimationBuilder, BrowserAnimationFactory as ɵBrowserAnimationFactory, InjectableAnimationEngine as ɵInjectableAnimationEngine };","map":{"version":3,"names":["BrowserAnimationBuilder","AnimationBuilder","constructor","rootRenderer","doc","_nextAnimationId","typeData","id","encapsulation","ViewEncapsulation","None","styles","data","animation","_renderer","createRenderer","body","build","toString","entry","Array","isArray","sequence","issueAnimationCommand","BrowserAnimationFactory","ɵfac","BrowserAnimationBuilder_Factory","t","i0","ɵɵinject","RendererFactory2","DOCUMENT","ɵɵdefineInjectable","token","factory","ɵsetClassMetadata","Injectable","Inject","AnimationFactory","_id","create","element","options","RendererAnimationPlayer","parentPlayer","_started","totalTime","_command","_listen","eventName","callback","listen","command","args","onDone","fn","onStart","onDestroy","init","hasStarted","play","pause","restart","finish","destroy","reset","setPosition","p","getPosition","engine","players","renderer","setProperty","ANIMATION_PREFIX","DISABLE_ANIMATIONS_FLAG","AnimationRendererFactory","delegate","_zone","_currentId","_microtaskId","_animationCallbacksBuffer","_rendererCache","Map","_cdRecurDepth","onRemovalComplete","parentNode","removeChild","hostElement","type","EMPTY_NAMESPACE_ID","get","onRendererDestroy","delete","BaseAnimationRenderer","set","componentId","namespaceId","register","registerTrigger","trigger","forEach","name","animationTriggers","AnimationRenderer","begin","_scheduleCountTask","queueMicrotask","scheduleListenerCallback","count","run","length","tuple","push","end","runOutsideAngular","flush","whenRenderingDone","i1","ɵAnimationEngine","NgZone","_onDestroy","destroyNode","node","afterFlushAnimationsDone","createElement","namespace","createComment","value","createText","appendChild","parent","newChild","onInsert","insertBefore","refChild","isMove","oldChild","isHostElement","onRemove","selectRootElement","selectorOrNode","preserveContent","nextSibling","setAttribute","el","removeAttribute","addClass","removeClass","setStyle","style","flags","removeStyle","charAt","disableAnimations","setValue","target","undefined","process","slice","resolveElementFromTarget","phase","parseTriggerCallbackName","event","countId","document","window","triggerName","dotIndex","indexOf","substring","InjectableAnimationEngine","driver","normalizer","appRef","ngOnDestroy","InjectableAnimationEngine_Factory","AnimationDriver","ɵAnimationStyleNormalizer","ApplicationRef","instantiateDefaultStyleNormalizer","ɵWebAnimationsStyleNormalizer","instantiateRendererFactory","zone","SHARED_ANIMATION_PROVIDERS","provide","useClass","useFactory","deps","ɵDomRendererFactory2","BROWSER_ANIMATIONS_PROVIDERS","ɵWebAnimationsDriver","ANIMATION_MODULE_TYPE","useValue","BROWSER_NOOP_ANIMATIONS_PROVIDERS","ɵNoopAnimationDriver","BrowserAnimationsModule","withConfig","config","ngModule","providers","ɵmod","ɵɵdefineNgModule","ɵɵdefineInjector","imports","BrowserModule","NgModule","exports","provideAnimations","NoopAnimationsModule","provideNoopAnimations"],"sources":["C:\\Users\\eftel\\Documents\\packages\\platform-browser\\animations\\src\\animation_builder.ts","C:\\Users\\eftel\\Documents\\packages\\platform-browser\\animations\\src\\animation_renderer.ts","C:\\Users\\eftel\\Documents\\packages\\platform-browser\\animations\\src\\providers.ts","C:\\Users\\eftel\\Documents\\packages\\platform-browser\\animations\\src\\module.ts","C:\\Users\\eftel\\Documents\\packages\\platform-browser\\animations\\src\\animations.ts","C:\\Users\\eftel\\Documents\\packages\\platform-browser\\animations\\public_api.ts","C:\\Users\\eftel\\Documents\\packages\\platform-browser\\animations\\index.ts","C:\\Users\\eftel\\Documents\\packages\\platform-browser\\animations\\animations.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationBuilder, AnimationFactory, AnimationMetadata, AnimationOptions, AnimationPlayer, sequence} from '@angular/animations';\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, RendererFactory2, RendererType2, ViewEncapsulation} from '@angular/core';\n\nimport {AnimationRenderer} from './animation_renderer';\n\n@Injectable()\nexport class BrowserAnimationBuilder extends AnimationBuilder {\n  private _nextAnimationId = 0;\n  private _renderer: AnimationRenderer;\n\n  constructor(rootRenderer: RendererFactory2, @Inject(DOCUMENT) doc: any) {\n    super();\n    const typeData =\n        {id: '0', encapsulation: ViewEncapsulation.None, styles: [], data: {animation: []}} as\n        RendererType2;\n    this._renderer = rootRenderer.createRenderer(doc.body, typeData) as AnimationRenderer;\n  }\n\n  override build(animation: AnimationMetadata|AnimationMetadata[]): AnimationFactory {\n    const id = this._nextAnimationId.toString();\n    this._nextAnimationId++;\n    const entry = Array.isArray(animation) ? sequence(animation) : animation;\n    issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n    return new BrowserAnimationFactory(id, this._renderer);\n  }\n}\n\nexport class BrowserAnimationFactory extends AnimationFactory {\n  constructor(private _id: string, private _renderer: AnimationRenderer) {\n    super();\n  }\n\n  override create(element: any, options?: AnimationOptions): AnimationPlayer {\n    return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n  }\n}\n\nexport class RendererAnimationPlayer implements AnimationPlayer {\n  public parentPlayer: AnimationPlayer|null = null;\n  private _started = false;\n\n  constructor(\n      public id: string, public element: any, options: AnimationOptions,\n      private _renderer: AnimationRenderer) {\n    this._command('create', options);\n  }\n\n  private _listen(eventName: string, callback: (event: any) => any): () => void {\n    return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n  }\n\n  private _command(command: string, ...args: any[]) {\n    return issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n  }\n\n  onDone(fn: () => void): void {\n    this._listen('done', fn);\n  }\n\n  onStart(fn: () => void): void {\n    this._listen('start', fn);\n  }\n\n  onDestroy(fn: () => void): void {\n    this._listen('destroy', fn);\n  }\n\n  init(): void {\n    this._command('init');\n  }\n\n  hasStarted(): boolean {\n    return this._started;\n  }\n\n  play(): void {\n    this._command('play');\n    this._started = true;\n  }\n\n  pause(): void {\n    this._command('pause');\n  }\n\n  restart(): void {\n    this._command('restart');\n  }\n\n  finish(): void {\n    this._command('finish');\n  }\n\n  destroy(): void {\n    this._command('destroy');\n  }\n\n  reset(): void {\n    this._command('reset');\n    this._started = false;\n  }\n\n  setPosition(p: number): void {\n    this._command('setPosition', p);\n  }\n\n  getPosition(): number {\n    return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;\n  }\n\n  public totalTime = 0;\n}\n\nfunction issueAnimationCommand(\n    renderer: AnimationRenderer, element: any, id: string, command: string, args: any[]): any {\n  return renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationTriggerMetadata} from '@angular/animations';\nimport {ɵAnimationEngine as AnimationEngine} from '@angular/animations/browser';\nimport {Injectable, NgZone, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '@angular/core';\n\nconst ANIMATION_PREFIX = '@';\nconst DISABLE_ANIMATIONS_FLAG = '@.disabled';\n\n// Define a recursive type to allow for nested arrays of `AnimationTriggerMetadata`. Note that an\n// interface declaration is used as TypeScript prior to 3.7 does not support recursive type\n// references, see https://github.com/microsoft/TypeScript/pull/33050 for details.\ntype NestedAnimationTriggerMetadata = AnimationTriggerMetadata|RecursiveAnimationTriggerMetadata;\ninterface RecursiveAnimationTriggerMetadata extends Array<NestedAnimationTriggerMetadata> {}\n\n@Injectable()\nexport class AnimationRendererFactory implements RendererFactory2 {\n  private _currentId: number = 0;\n  private _microtaskId: number = 1;\n  private _animationCallbacksBuffer: [(e: any) => any, any][] = [];\n  private _rendererCache = new Map<Renderer2, BaseAnimationRenderer>();\n  private _cdRecurDepth = 0;\n\n  constructor(\n      private delegate: RendererFactory2, private engine: AnimationEngine, private _zone: NgZone) {\n    engine.onRemovalComplete = (element: any, delegate: Renderer2) => {\n      // Note: if a component element has a leave animation, and a host leave animation,\n      // the view engine will call `removeChild` for the parent\n      // component renderer as well as for the child component renderer.\n      // Therefore, we need to check if we already removed the element.\n      const parentNode = delegate?.parentNode(element);\n      if (parentNode) {\n        delegate.removeChild(parentNode, element);\n      }\n    };\n  }\n\n  createRenderer(hostElement: any, type: RendererType2): Renderer2 {\n    const EMPTY_NAMESPACE_ID = '';\n\n    // cache the delegates to find out which cached delegate can\n    // be used by which cached renderer\n    const delegate = this.delegate.createRenderer(hostElement, type);\n    if (!hostElement || !type || !type.data || !type.data['animation']) {\n      let renderer: BaseAnimationRenderer|undefined = this._rendererCache.get(delegate);\n      if (!renderer) {\n        // Ensure that the renderer is removed from the cache on destroy\n        // since it may contain references to detached DOM nodes.\n        const onRendererDestroy = () => this._rendererCache.delete(delegate);\n        renderer =\n            new BaseAnimationRenderer(EMPTY_NAMESPACE_ID, delegate, this.engine, onRendererDestroy);\n        // only cache this result when the base renderer is used\n        this._rendererCache.set(delegate, renderer);\n      }\n      return renderer;\n    }\n\n    const componentId = type.id;\n    const namespaceId = type.id + '-' + this._currentId;\n    this._currentId++;\n\n    this.engine.register(namespaceId, hostElement);\n\n    const registerTrigger = (trigger: NestedAnimationTriggerMetadata) => {\n      if (Array.isArray(trigger)) {\n        trigger.forEach(registerTrigger);\n      } else {\n        this.engine.registerTrigger(componentId, namespaceId, hostElement, trigger.name, trigger);\n      }\n    };\n    const animationTriggers = type.data['animation'] as NestedAnimationTriggerMetadata[];\n    animationTriggers.forEach(registerTrigger);\n\n    return new AnimationRenderer(this, namespaceId, delegate, this.engine);\n  }\n\n  begin() {\n    this._cdRecurDepth++;\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n\n  private _scheduleCountTask() {\n    queueMicrotask(() => {\n      this._microtaskId++;\n    });\n  }\n\n  /** @internal */\n  scheduleListenerCallback(count: number, fn: (e: any) => any, data: any) {\n    if (count >= 0 && count < this._microtaskId) {\n      this._zone.run(() => fn(data));\n      return;\n    }\n\n    if (this._animationCallbacksBuffer.length == 0) {\n      queueMicrotask(() => {\n        this._zone.run(() => {\n          this._animationCallbacksBuffer.forEach(tuple => {\n            const [fn, data] = tuple;\n            fn(data);\n          });\n          this._animationCallbacksBuffer = [];\n        });\n      });\n    }\n\n    this._animationCallbacksBuffer.push([fn, data]);\n  }\n\n  end() {\n    this._cdRecurDepth--;\n\n    // this is to prevent animations from running twice when an inner\n    // component does CD when a parent component instead has inserted it\n    if (this._cdRecurDepth == 0) {\n      this._zone.runOutsideAngular(() => {\n        this._scheduleCountTask();\n        this.engine.flush(this._microtaskId);\n      });\n    }\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n\n  whenRenderingDone(): Promise<any> {\n    return this.engine.whenRenderingDone();\n  }\n}\n\nexport class BaseAnimationRenderer implements Renderer2 {\n  constructor(\n      protected namespaceId: string, public delegate: Renderer2, public engine: AnimationEngine,\n      private _onDestroy?: () => void) {}\n\n  get data() {\n    return this.delegate.data;\n  }\n\n  destroyNode(node: any): void {\n    this.delegate.destroyNode?.(node);\n  }\n\n  destroy(): void {\n    this.engine.destroy(this.namespaceId, this.delegate);\n    this.engine.afterFlushAnimationsDone(() => {\n      // Call the renderer destroy method after the animations has finished as otherwise\n      // styles will be removed too early which will cause an unstyled animation.\n      queueMicrotask(() => {\n        this.delegate.destroy();\n      });\n    });\n\n    this._onDestroy?.();\n  }\n\n  createElement(name: string, namespace?: string|null|undefined) {\n    return this.delegate.createElement(name, namespace);\n  }\n\n  createComment(value: string) {\n    return this.delegate.createComment(value);\n  }\n\n  createText(value: string) {\n    return this.delegate.createText(value);\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    this.delegate.appendChild(parent, newChild);\n    this.engine.onInsert(this.namespaceId, newChild, parent, false);\n  }\n\n  insertBefore(parent: any, newChild: any, refChild: any, isMove: boolean = true): void {\n    this.delegate.insertBefore(parent, newChild, refChild);\n    // If `isMove` true than we should animate this insert.\n    this.engine.onInsert(this.namespaceId, newChild, parent, isMove);\n  }\n\n  removeChild(parent: any, oldChild: any, isHostElement: boolean): void {\n    this.engine.onRemove(this.namespaceId, oldChild, this.delegate);\n  }\n\n  selectRootElement(selectorOrNode: any, preserveContent?: boolean) {\n    return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n  }\n\n  parentNode(node: any) {\n    return this.delegate.parentNode(node);\n  }\n\n  nextSibling(node: any) {\n    return this.delegate.nextSibling(node);\n  }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string|null|undefined): void {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string|null|undefined): void {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n\n  addClass(el: any, name: string): void {\n    this.delegate.addClass(el, name);\n  }\n\n  removeClass(el: any, name: string): void {\n    this.delegate.removeClass(el, name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2|undefined): void {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n\n  removeStyle(el: any, style: string, flags?: RendererStyleFlags2|undefined): void {\n    this.delegate.removeStyle(el, style, flags);\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    if (name.charAt(0) == ANIMATION_PREFIX && name == DISABLE_ANIMATIONS_FLAG) {\n      this.disableAnimations(el, !!value);\n    } else {\n      this.delegate.setProperty(el, name, value);\n    }\n  }\n\n  setValue(node: any, value: string): void {\n    this.delegate.setValue(node, value);\n  }\n\n  listen(target: any, eventName: string, callback: (event: any) => boolean | void): () => void {\n    return this.delegate.listen(target, eventName, callback);\n  }\n\n  protected disableAnimations(element: any, value: boolean) {\n    this.engine.disableAnimations(element, value);\n  }\n}\n\nexport class AnimationRenderer extends BaseAnimationRenderer implements Renderer2 {\n  constructor(\n      public factory: AnimationRendererFactory, namespaceId: string, delegate: Renderer2,\n      engine: AnimationEngine, onDestroy?: () => void) {\n    super(namespaceId, delegate, engine, onDestroy);\n    this.namespaceId = namespaceId;\n  }\n\n  override setProperty(el: any, name: string, value: any): void {\n    if (name.charAt(0) == ANIMATION_PREFIX) {\n      if (name.charAt(1) == '.' && name == DISABLE_ANIMATIONS_FLAG) {\n        value = value === undefined ? true : !!value;\n        this.disableAnimations(el, value as boolean);\n      } else {\n        this.engine.process(this.namespaceId, el, name.slice(1), value);\n      }\n    } else {\n      this.delegate.setProperty(el, name, value);\n    }\n  }\n\n  override listen(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => any): () => void {\n    if (eventName.charAt(0) == ANIMATION_PREFIX) {\n      const element = resolveElementFromTarget(target);\n      let name = eventName.slice(1);\n      let phase = '';\n      // @listener.phase is for trigger animation callbacks\n      // @@listener is for animation builder callbacks\n      if (name.charAt(0) != ANIMATION_PREFIX) {\n        [name, phase] = parseTriggerCallbackName(name);\n      }\n      return this.engine.listen(this.namespaceId, element, name, phase, event => {\n        const countId = (event as any)['_data'] || -1;\n        this.factory.scheduleListenerCallback(countId, callback, event);\n      });\n    }\n    return this.delegate.listen(target, eventName, callback);\n  }\n}\n\nfunction resolveElementFromTarget(target: 'window'|'document'|'body'|any): any {\n  switch (target) {\n    case 'body':\n      return document.body;\n    case 'document':\n      return document;\n    case 'window':\n      return window;\n    default:\n      return target;\n  }\n}\n\nfunction parseTriggerCallbackName(triggerName: string) {\n  const dotIndex = triggerName.indexOf('.');\n  const trigger = triggerName.substring(0, dotIndex);\n  const phase = triggerName.slice(dotIndex + 1);\n  return [trigger, phase];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationBuilder} from '@angular/animations';\nimport {AnimationDriver, ɵAnimationEngine as AnimationEngine, ɵAnimationStyleNormalizer as AnimationStyleNormalizer, ɵNoopAnimationDriver as NoopAnimationDriver, ɵWebAnimationsDriver as WebAnimationsDriver, ɵWebAnimationsStyleNormalizer as WebAnimationsStyleNormalizer} from '@angular/animations/browser';\nimport {DOCUMENT} from '@angular/common';\nimport {ANIMATION_MODULE_TYPE, ApplicationRef, Inject, Injectable, NgZone, OnDestroy, Provider, RendererFactory2} from '@angular/core';\nimport {ɵDomRendererFactory2 as DomRendererFactory2} from '@angular/platform-browser';\n\nimport {BrowserAnimationBuilder} from './animation_builder';\nimport {AnimationRendererFactory} from './animation_renderer';\n\n@Injectable()\nexport class InjectableAnimationEngine extends AnimationEngine implements OnDestroy {\n  // The `ApplicationRef` is injected here explicitly to force the dependency ordering.\n  // Since the `ApplicationRef` should be created earlier before the `AnimationEngine`, they\n  // both have `ngOnDestroy` hooks and `flush()` must be called after all views are destroyed.\n  constructor(\n      @Inject(DOCUMENT) doc: any, driver: AnimationDriver, normalizer: AnimationStyleNormalizer,\n      appRef: ApplicationRef) {\n    super(doc.body, driver, normalizer);\n  }\n\n  ngOnDestroy(): void {\n    this.flush();\n  }\n}\n\nexport function instantiateDefaultStyleNormalizer() {\n  return new WebAnimationsStyleNormalizer();\n}\n\nexport function instantiateRendererFactory(\n    renderer: DomRendererFactory2, engine: AnimationEngine, zone: NgZone) {\n  return new AnimationRendererFactory(renderer, engine, zone);\n}\n\nconst SHARED_ANIMATION_PROVIDERS: Provider[] = [\n  {provide: AnimationBuilder, useClass: BrowserAnimationBuilder},\n  {provide: AnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer},\n  {provide: AnimationEngine, useClass: InjectableAnimationEngine}, {\n    provide: RendererFactory2,\n    useFactory: instantiateRendererFactory,\n    deps: [DomRendererFactory2, AnimationEngine, NgZone]\n  }\n];\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nexport const BROWSER_ANIMATIONS_PROVIDERS: Provider[] = [\n  {provide: AnimationDriver, useFactory: () => new WebAnimationsDriver()},\n  {provide: ANIMATION_MODULE_TYPE, useValue: 'BrowserAnimations'}, ...SHARED_ANIMATION_PROVIDERS\n];\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nexport const BROWSER_NOOP_ANIMATIONS_PROVIDERS: Provider[] = [\n  {provide: AnimationDriver, useClass: NoopAnimationDriver},\n  {provide: ANIMATION_MODULE_TYPE, useValue: 'NoopAnimations'}, ...SHARED_ANIMATION_PROVIDERS\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ModuleWithProviders, NgModule, Provider} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {BROWSER_ANIMATIONS_PROVIDERS, BROWSER_NOOP_ANIMATIONS_PROVIDERS} from './providers';\n\n/**\n * Object used to configure the behavior of {@link BrowserAnimationsModule}\n * @publicApi\n */\nexport interface BrowserAnimationsModuleConfig {\n  /**\n   *  Whether animations should be disabled. Passing this is identical to providing the\n   * `NoopAnimationsModule`, but it can be controlled based on a runtime value.\n   */\n  disableAnimations?: boolean;\n}\n\n/**\n * Exports `BrowserModule` with additional [dependency-injection providers](guide/glossary#provider)\n * for use with animations. See [Animations](guide/animations).\n * @publicApi\n */\n@NgModule({\n  exports: [BrowserModule],\n  providers: BROWSER_ANIMATIONS_PROVIDERS,\n})\nexport class BrowserAnimationsModule {\n  /**\n   * Configures the module based on the specified object.\n   *\n   * @param config Object used to configure the behavior of the `BrowserAnimationsModule`.\n   * @see {@link BrowserAnimationsModuleConfig}\n   *\n   * @usageNotes\n   * When registering the `BrowserAnimationsModule`, you can use the `withConfig`\n   * function as follows:\n   * ```\n   * @NgModule({\n   *   imports: [BrowserAnimationsModule.withConfig(config)]\n   * })\n   * class MyNgModule {}\n   * ```\n   */\n  static withConfig(config: BrowserAnimationsModuleConfig):\n      ModuleWithProviders<BrowserAnimationsModule> {\n    return {\n      ngModule: BrowserAnimationsModule,\n      providers: config.disableAnimations ? BROWSER_NOOP_ANIMATIONS_PROVIDERS :\n                                            BROWSER_ANIMATIONS_PROVIDERS\n    };\n  }\n}\n\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimations()\n *   ]\n * });\n * ```\n *\n * @publicApi\n */\nexport function provideAnimations(): Provider[] {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideAnimations` call results in app code.\n  return [...BROWSER_ANIMATIONS_PROVIDERS];\n}\n\n/**\n * A null player that must be imported to allow disabling of animations.\n * @publicApi\n */\n@NgModule({\n  exports: [BrowserModule],\n  providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n})\nexport class NoopAnimationsModule {\n}\n\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to disable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * @usageNotes\n *\n * The function is useful when you want to bootstrap an application using\n * the `bootstrapApplication` function, but you need to disable animations\n * (for example, when running tests).\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideNoopAnimations()\n *   ]\n * });\n * ```\n *\n * @publicApi\n */\nexport function provideNoopAnimations(): Provider[] {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideNoopAnimations` call results in app code.\n  return [...BROWSER_NOOP_ANIMATIONS_PROVIDERS];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\nexport {ANIMATION_MODULE_TYPE} from '@angular/core';\nexport {BrowserAnimationsModule, BrowserAnimationsModuleConfig, NoopAnimationsModule, provideAnimations, provideNoopAnimations} from './module';\n\nexport * from './private_export';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/animations';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}