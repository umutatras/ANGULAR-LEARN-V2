{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class NamePipe {\n  transform(value, searc) {\n    return value.filter(p => {\n      const name = p.name.toLowerCase().includes(searc.toLocaleLowerCase());\n      const age = p.age.toString().includes(searc);\n      return name + age;\n    });\n  }\n  static #_ = this.ɵfac = function NamePipe_Factory(t) {\n    return new (t || NamePipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"namePipe\",\n    type: NamePipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["NamePipe","transform","value","searc","filter","p","name","toLowerCase","includes","toLocaleLowerCase","age","toString","_","_2","pure"],"sources":["C:\\Users\\eftel\\Documents\\AngularLearn\\learn-angular\\src\\app\\components\\pipe\\name.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'namePipe'\n})\nexport class NamePipe implements PipeTransform {\n\n  transform(value: any[],searc: string ){\n    return value.filter(p=>{\n      const name=p.name.toLowerCase().includes(searc.toLocaleLowerCase());\n      const age=p.age.toString().includes(searc);\n      return name+age;\n    });\n  }\n\n  // transform(value: {name:string,age:number}[], searc:string): string[] {\n  //   return value.filter(p=>p.toLowerCase().includes(searc.toLocaleLowerCase()));\n  // }\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,QAAQ;EAEnBC,SAASA,CAACC,KAAY,EAACC,KAAa;IAClC,OAAOD,KAAK,CAACE,MAAM,CAACC,CAAC,IAAE;MACrB,MAAMC,IAAI,GAACD,CAAC,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACL,KAAK,CAACM,iBAAiB,EAAE,CAAC;MACnE,MAAMC,GAAG,GAACL,CAAC,CAACK,GAAG,CAACC,QAAQ,EAAE,CAACH,QAAQ,CAACL,KAAK,CAAC;MAC1C,OAAOG,IAAI,GAACI,GAAG;IACjB,CAAC,CAAC;EACJ;EAAC,QAAAE,CAAA,G;qBARUZ,QAAQ;EAAA;EAAA,QAAAa,EAAA,G;;UAARb,QAAQ;IAAAc,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}